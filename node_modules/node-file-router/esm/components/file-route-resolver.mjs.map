{"version":3,"file":"file-route-resolver.mjs","names":["fs","path","exactSlugSegment","catchAllSegment","optionalCatchAllSegment","RouteHandler","isCommonJs","validateFileFormat","FileRouteResolver","fileExtensions","join","fileExtensionPattern","RegExp","indexFilePattern","clearImportCache","constructor","data","baseDir","ignoreFilesRegex","console","warn","getHandlers","directory","scanDirectory","then","handlers","sort","compareByNestingLevelAndType","parentRoute","nestingLevel","entries","readdir","withFileTypes","routeHandlers","processEntry","entry","fullPath","name","routePath","isDirectory","childHandlers","push","isFile","isValidFile","routeHandler","processFileEntry","some","pattern","test","left","right","isDynamic","dynamicRoute","isMatch","fileName","require","cache","handler","module","default","initialRoute","replace","method","pureRouteName","extractMethodFromRoute","route","paramExtractors","parseDynamicParams","isIndex","routeKey","regex","filter","reduce","acc","parsedRoute","parse","match","undefined","pureRoute"],"sources":["../../../src/components/file-route-resolver.ts"],"sourcesContent":["import fs from 'node:fs/promises';\nimport path from 'node:path';\n\nimport { exactSlugSegment } from './dynamic-routes/exact-slug-segment';\nimport { catchAllSegment } from './dynamic-routes/catch-all-segment';\nimport { optionalCatchAllSegment } from './dynamic-routes/optional-catch-all-segment';\nimport { RouteHandler } from './route-handler/route-handler';\nimport { isCommonJs } from '../utils/env.utils';\nimport { validateFileFormat } from '../validations/validations';\nimport type { ParamExtractor } from './dynamic-routes/common/route-params-parser';\nimport type { Dirent } from 'node:fs';\n\ninterface Props {\n  baseDir: string;\n  ignoreFilesRegex?: RegExp[];\n  clearImportCache: boolean;\n}\n\ninterface RouteWithParams {\n  route: string;\n  paramExtractors: Record<string, ParamExtractor>;\n}\n\nexport class FileRouteResolver {\n  private static readonly fileExtensions = ['js', 'mjs', 'cjs', 'ts'].join('|');\n  private static readonly fileExtensionPattern = new RegExp(\n    `\\\\.(${FileRouteResolver.fileExtensions})$`\n  );\n  // Matches: index.js and index.[get].js\n  private static readonly indexFilePattern = new RegExp(\n    `index(\\\\.\\\\[[^\\\\]]+\\\\])?\\\\.(${FileRouteResolver.fileExtensions})$`\n  );\n\n  private readonly baseDir: string;\n  private readonly ignoreFilesRegex: RegExp[];\n  private readonly clearImportCache: boolean = false;\n\n  constructor(data: Props) {\n    this.baseDir = data.baseDir;\n    this.ignoreFilesRegex = data.ignoreFilesRegex || [];\n\n    if (data.clearImportCache && !isCommonJs()) {\n      console.warn('Cache clearing is only supported for CommonJS modules');\n    } else {\n      this.clearImportCache = data.clearImportCache;\n    }\n  }\n\n  async getHandlers(directory = this.baseDir): Promise<RouteHandler[]> {\n    return this.scanDirectory(directory).then((handlers) =>\n      handlers.sort(this.compareByNestingLevelAndType)\n    );\n  }\n\n  private async scanDirectory(\n    directory = this.baseDir,\n    parentRoute = '',\n    nestingLevel = 0\n  ): Promise<RouteHandler[]> {\n    const entries = await fs.readdir(directory, { withFileTypes: true });\n    const routeHandlers: RouteHandler[] = [];\n\n    const processEntry = async (entry: Dirent) => {\n      const fullPath = path.join(directory, entry.name);\n      const routePath = `${parentRoute}/${entry.name}`;\n\n      if (entry.isDirectory()) {\n        const childHandlers = await this.scanDirectory(\n          fullPath,\n          routePath,\n          nestingLevel + 1\n        );\n        routeHandlers.push(...childHandlers);\n      } else if (entry.isFile() && this.isValidFile(entry.name)) {\n        const routeHandler = await this.processFileEntry(\n          fullPath,\n          entry,\n          routePath,\n          nestingLevel\n        );\n        routeHandlers.push(routeHandler);\n      }\n    };\n\n    for (const entry of entries) {\n      await processEntry(entry);\n    }\n\n    return routeHandlers;\n  }\n\n  private isValidFile(name: string): boolean {\n    if (this.ignoreFilesRegex.some((pattern) => pattern.test(name))) {\n      return false;\n    }\n\n    return FileRouteResolver.fileExtensionPattern.test(name);\n  }\n\n  private compareByNestingLevelAndType(\n    left: RouteHandler,\n    right: RouteHandler\n  ): number {\n    if (left.nestingLevel !== right.nestingLevel) {\n      return right.nestingLevel - left.nestingLevel;\n    }\n\n    const isDynamic = [\n      optionalCatchAllSegment,\n      catchAllSegment,\n      exactSlugSegment\n    ].some((dynamicRoute) => dynamicRoute.isMatch(left.fileName));\n\n    return isDynamic ? 1 : -1;\n  }\n\n  private async processFileEntry(\n    fullPath: string,\n    entry: Dirent,\n    routePath: string,\n    nestingLevel: number\n  ): Promise<RouteHandler> {\n    if (this.clearImportCache) {\n      delete require.cache[fullPath];\n    }\n\n    const handler = await import(fullPath)\n      .then((module) => validateFileFormat(fullPath, module))\n      .then((module) => module.default);\n\n    const initialRoute = routePath.replace(\n      FileRouteResolver.fileExtensionPattern,\n      ''\n    );\n\n    const [method, pureRouteName] = this.extractMethodFromRoute(initialRoute);\n    const { route, paramExtractors } = this.parseDynamicParams(pureRouteName);\n\n    const isIndex = FileRouteResolver.indexFilePattern.test(entry.name);\n    const routeKey = isIndex ? route.replace(/\\/index$/, '') : route;\n\n    const regex = new RegExp(`^${routeKey}/?$`);\n\n    return new RouteHandler({\n      method,\n      fileName: entry.name,\n      handler,\n      regex,\n      nestingLevel,\n      paramExtractors\n    });\n  }\n\n  private parseDynamicParams(initialRoute: string): RouteWithParams {\n    return [exactSlugSegment, catchAllSegment, optionalCatchAllSegment]\n      .filter((dynamicRoute) => dynamicRoute.isMatch(initialRoute))\n      .reduce(\n        (acc, route) => {\n          const parsedRoute = route.parse(acc.route);\n          return {\n            route: parsedRoute.route,\n            paramExtractors: {\n              ...acc.paramExtractors,\n              ...parsedRoute.paramExtractors\n            }\n          };\n        },\n        { route: initialRoute, paramExtractors: {} }\n      );\n  }\n\n  private extractMethodFromRoute(route: string): [string | undefined, string] {\n    const pattern = /\\.\\[([^\\]]+)\\](\\..+)?$/;\n\n    const match = route.match(pattern);\n    if (!match) {\n      return [undefined, route];\n    }\n\n    const [, method] = match;\n    const pureRoute = route.replace(pattern, '');\n\n    return [method, pureRoute];\n  }\n}\n"],"mappings":"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"}