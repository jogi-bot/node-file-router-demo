{"version":3,"file":"optional-catch-all-segment.mjs","names":["createRouteSegmentParamsParser","pattern","optionalCatchAllSegment","type","parse","paramExtractor","value","split","sanitizeParam","param","slice","length","routeParamPattern","isMatch","route","RegExp","test"],"sources":["../../../../src/components/dynamic-routes/optional-catch-all-segment.ts"],"sourcesContent":["import { createRouteSegmentParamsParser } from './common/route-params-parser';\nimport type { DynamicRouteSegment } from '../../types/dynamic-route-segment';\n\nconst pattern = /\\/\\[\\[(\\.\\.\\.\\w+)]]/g;\n\nexport const optionalCatchAllSegment: DynamicRouteSegment = {\n  type: 'optional-catch-all',\n  parse: createRouteSegmentParamsParser({\n    pattern,\n    paramExtractor: (value: string) => value.split('/'),\n    sanitizeParam: (param) => param.slice('/[[...'.length, -']]'.length),\n    routeParamPattern: '\\\\/?(?<:key>.*)'\n  }),\n  isMatch: (route) => new RegExp(pattern).test(route)\n};\n"],"mappings":"SAASA,8BAA8B;AAGvC,MAAMC,OAAO,GAAG,sBAAsB;AAEtC,OAAO,MAAMC,uBAA4C,GAAG;EAC1DC,IAAI,EAAE,oBAAoB;EAC1BC,KAAK,EAAEJ,8BAA8B,CAAC;IACpCC,OAAO;IACPI,cAAc,EAAGC,KAAa,IAAKA,KAAK,CAACC,KAAK,CAAC,GAAG,CAAC;IACnDC,aAAa,EAAGC,KAAK,IAAKA,KAAK,CAACC,KAAK,CAAC,QAAQ,CAACC,MAAM,EAAE,CAAC,IAAI,CAACA,MAAM,CAAC;IACpEC,iBAAiB,EAAE;EACrB,CAAC,CAAC;EACFC,OAAO,EAAGC,KAAK,IAAK,IAAIC,MAAM,CAACd,OAAO,CAAC,CAACe,IAAI,CAACF,KAAK;AACpD,CAAC"}