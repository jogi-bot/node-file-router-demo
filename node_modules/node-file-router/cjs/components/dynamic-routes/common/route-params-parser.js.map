{"version":3,"file":"route-params-parser.js","names":["_slugParam","require","_typeof","obj","Symbol","iterator","constructor","prototype","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","value","_toPropertyKey","configurable","writable","arg","_toPrimitive","String","input","hint","prim","toPrimitive","undefined","res","call","TypeError","Number","createRouteSegmentParamsParser","_ref","pattern","paramExtractor","routeParamPattern","sanitizeParam","parseDynamicSegment","route","slugParamMatch","match","reduce","acc","currentParam","paramName","encodeSlugParam","newRoute","replace","newParams","paramExtractors"],"sources":["../../../../../src/components/dynamic-routes/common/route-params-parser.ts"],"sourcesContent":["import { encodeSlugParam } from '../../slug-param/slug-param';\nimport type { Dictionary } from '../../../types/dictionary';\n\nexport type ParamExtractor = (value: string) => string | string[];\n\ninterface Params {\n  pattern: RegExp;\n  paramExtractor: ParamExtractor;\n  sanitizeParam: (value: string) => string;\n  routeParamPattern: string;\n}\n\nexport interface ParsedDynamicSegment {\n  route: string;\n  paramExtractors: Dictionary<ParamExtractor>;\n}\n\nexport function createRouteSegmentParamsParser({\n  pattern,\n  paramExtractor,\n  routeParamPattern,\n  sanitizeParam\n}: Params) {\n  return function parseDynamicSegment(route: string): ParsedDynamicSegment {\n    const slugParamMatch = route.match(pattern)!;\n    return slugParamMatch.reduce(\n      (acc, currentParam) => {\n        const paramName = sanitizeParam(currentParam);\n        const key = encodeSlugParam(paramName);\n\n        const newRoute = acc.route.replace(\n          currentParam,\n          routeParamPattern.replace(':key', key)\n        );\n        const newParams = { ...acc.paramExtractors, [key]: paramExtractor };\n\n        return { route: newRoute, paramExtractors: newParams };\n      },\n      { route, paramExtractors: {} }\n    );\n  };\n}\n"],"mappings":"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"}