{"version":3,"file":"optional-catch-all-segment.js","names":["_routeParamsParser","require","pattern","optionalCatchAllSegment","type","parse","createRouteSegmentParamsParser","paramExtractor","value","split","sanitizeParam","param","slice","length","routeParamPattern","isMatch","route","RegExp","test","exports"],"sources":["../../../../src/components/dynamic-routes/optional-catch-all-segment.ts"],"sourcesContent":["import { createRouteSegmentParamsParser } from './common/route-params-parser';\nimport type { DynamicRouteSegment } from '../../types/dynamic-route-segment';\n\nconst pattern = /\\/\\[\\[(\\.\\.\\.\\w+)]]/g;\n\nexport const optionalCatchAllSegment: DynamicRouteSegment = {\n  type: 'optional-catch-all',\n  parse: createRouteSegmentParamsParser({\n    pattern,\n    paramExtractor: (value: string) => value.split('/'),\n    sanitizeParam: (param) => param.slice('/[[...'.length, -']]'.length),\n    routeParamPattern: '\\\\/?(?<:key>.*)'\n  }),\n  isMatch: (route) => new RegExp(pattern).test(route)\n};\n"],"mappings":";;;;;;AAAA,IAAAA,kBAAA,GAAAC,OAAA;AAGA,IAAMC,OAAO,GAAG,sBAAsB;AAE/B,IAAMC,uBAA4C,GAAG;EAC1DC,IAAI,EAAE,oBAAoB;EAC1BC,KAAK,EAAE,IAAAC,iDAA8B,EAAC;IACpCJ,OAAO,EAAPA,OAAO;IACPK,cAAc,EAAE,SAAAA,eAACC,KAAa;MAAA,OAAKA,KAAK,CAACC,KAAK,CAAC,GAAG,CAAC;IAAA;IACnDC,aAAa,EAAE,SAAAA,cAACC,KAAK;MAAA,OAAKA,KAAK,CAACC,KAAK,CAAC,QAAQ,CAACC,MAAM,EAAE,CAAC,IAAI,CAACA,MAAM,CAAC;IAAA;IACpEC,iBAAiB,EAAE;EACrB,CAAC,CAAC;EACFC,OAAO,EAAE,SAAAA,QAACC,KAAK;IAAA,OAAK,IAAIC,MAAM,CAACf,OAAO,CAAC,CAACgB,IAAI,CAACF,KAAK,CAAC;EAAA;AACrD,CAAC;AAACG,OAAA,CAAAhB,uBAAA,GAAAA,uBAAA"}