import type { RequestHandler } from '../types/request-handler';
export declare function mapKeys<NK extends string, V>(replacer: (key: string) => NK): (obj: Record<string, V>) => Record<NK, V>;
export declare function mapValues<V, NV>(replacer: (value: V, key: string) => NV): (obj: Record<string, V>) => Record<string, NV>;
export declare function filterValues<V>(predicate: (value: V) => boolean): (obj: Record<string, V>) => Record<string, V>;
export declare function isRecordWith<T>(maybeObject: unknown): maybeObject is Record<string, T>;
export declare function isFunction(maybeFunction: unknown): maybeFunction is RequestHandler;
//# sourceMappingURL=object.utils.d.ts.map